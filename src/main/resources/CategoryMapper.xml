<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >



        
<mapper namespace="com.shoutplatform.domain.dao.ICategoryDAO" >

    <!-- getbyId(id)-->
    <select id='getCategoryById' parameterType='int' resultType='Category'>
        SELECT * FROM category WHERE idCategory = #{id}
    </select>
    
    <!-- getAllCategories -->
    <resultMap type='Category' id='CategoryResult'>
        <!-- id is similar to result, but internallz used as an id when it comes to equals() method-->
        <id property='id' column='idCategory'/>
        <result property='name' column='name'/>        
    </resultMap>
    <select id='getAllCategories' resultMap='CategoryResult'>
        SELECT * FROM category
    </select>
    
    <!-- get a Category with all questions inside question property-->
    <resultMap type='Category' id='CategoryAndQuestionsResult'>
        <id property='id' column='idCategory'/>
        <result property='name' column='name'/> 
        <collection property="questions" ofType="Question">
            <id property="id" column="idQuestion"/>
            <result property="title" column="title"/>         
        </collection>
    </resultMap>   
    <select id='getCategoryWithQuestions' parameterType='int' resultMap='CategoryAndQuestionsResult'>
        SELECT C.idCategory, `name`, Q.idQuestion, title FROM 
            category C, category_question CQ, question Q
		WHERE C.idCategory = CQ.idCategory AND CQ.idQuestion=Q.idQuestion AND C.idCategory=#{id}
    </select>

    
    <insert id="insertCategory" parameterType="Category" useGeneratedKeys="true" keyProperty="idCategory">
        insert into category (name)
            values (#{name})
    </insert>
   
    
    
    <!-- Get category and the questions inside it -->
<!--    
    <resultMap type='Category' id='CategoryQuestionsResult'>
        <id property='idCategory' column='idCategory'/>
        <id property='name' column='name'/>
       
        <collection property="questions" column="idQuestion" javaType="ArrayList" ofType="Question">
            <id property="idQuestion" column="idQuestion"/>
            <result property="title" column="title"/>
        </collection>
        
    </resultMap>

    <select id="getCategoryWithQuestions" parameterType="int" resultType="CategoryQuestionsResult">
        SELECT C.idCategory as idCategory, `name`, Q.idQuestion as idQuestion, title FROM category C, question Q, category_question CQ			
            WHERE C.idCategory = CQ.idCategory AND CQ.idQuestion =  Q.idQuestion AND Q.idQuestion = #{id}
        
    </select>    -->


<!--
    <resultMap id="categoryMap" type="Category">   
        <id column="idCategory" property="idcategory" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
    </resultMap>
    
    <select id="getAllCategories" resultType="categoryMap">
        select * from category
    </select>-->
   <!--  
   <select id="getCategoryById" parameterType="int" resultType="categoryMap">
        select * from category where id = #{id}
    </select>-->




<!-- GENERATED BY THE GENERATOR (great example here ;) )
<mapper namespace="test.xml.CategoryMapper" >
  <resultMap id="BaseResultMap" type="com.mybatis.domain.objects.Category" >   
    <id column="idCategory" property="idcategory" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
  </resultMap>
  
  
  
  
  <sql id="Example_Where_Clause" >

    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
  
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >

    idCategory, name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mybatis.domain.objects.CategoryExample" >

    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >

    select 
    <include refid="Base_Column_List" />
    from category
    where idCategory = #{idcategory,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >

    delete from category
    where idCategory = #{idcategory,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mybatis.domain.objects.CategoryExample" >

    delete from category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mybatis.domain.objects.Category" >
   
    insert into category (idCategory, name)
    values (#{idcategory,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.mybatis.domain.objects.Category" >

    insert into category
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="idcategory != null" >
        idCategory,
      </if>
      <if test="name != null" >
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="idcategory != null" >
        #{idcategory,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mybatis.domain.objects.CategoryExample" resultType="java.lang.Integer" >

    select count(*) from category
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >

    update category
    <set >
      <if test="record.idcategory != null" >
        idCategory = #{record.idcategory,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >

    update category
    set idCategory = #{record.idcategory,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mybatis.domain.objects.Category" >

    update category
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where idCategory = #{idcategory,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mybatis.domain.objects.Category" >
    update category
    set name = #{name,jdbcType=VARCHAR}
    where idCategory = #{idcategory,jdbcType=INTEGER}
  </update>
  
  -->
  
</mapper>
